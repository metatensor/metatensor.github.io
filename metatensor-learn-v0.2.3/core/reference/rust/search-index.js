var searchIndex = new Map(JSON.parse('[\
["metatensor",{"t":"KFFFFFFFFFFFFFFFFFFFFNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNONNNOONNMNNMNMNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNOONMNNNNOONNNNNNNNNNNMNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONFSHHOOHHHHHHHHHHHH","n":["Array","ArrayRef","ArrayRefMut","EmptyArray","Error","GradientsIter","GradientsMutIter","LabelValue","Labels","LabelsBuilder","LabelsFixedSizeIter","LabelsIter","LazyMetadata","TensorBlock","TensorBlockData","TensorBlockDataMut","TensorBlockRef","TensorBlockRefMut","TensorMap","TensorMapIter","TensorMapIterMut","add","add_gradient","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_array","as_array","as_array_mut","as_raw","as_raw","as_raw_mut","as_ref","as_ref","as_ref_mut","block","block_by_id","block_matching","block_mut_by_id","blocks","blocks_matching","blocks_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_api","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","components","components","components","components","components","components_to_properties","contains","copy","copy","count","create","create","data","data","data","data_mut","deref","drop","drop","drop","empty","eq","eq","eq","errors","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw","from_raw","from_raw","gradient","gradient_list","gradient_mut","gradients","gradients_mut","hash","i32","index","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_raw","io","is_empty","isize","iter","iter","iter_fixed_size","iter_mut","keys","keys_to_properties","keys_to_samples","len","len","len","len","len","len","load","load","load","load_buffer","load_buffer","load_buffer","message","move_samples_from","move_samples_from","names","new","new","new","new","new","new","new","new","next","next","next","next","next","next","partial_cmp","position","properties","properties","properties","properties","properties","reserve","reshape","reshape","samples","samples","samples","samples","samples","save","save","save","save","save","save_buffer","save_buffer","save_buffer","save_buffer","save_buffer","select","shape","shape","single","size","size","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","swap_axes","swap_axes","to_any","to_any","to_any_mut","to_array","to_array","to_array_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_clone","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","usize","values","values","values","values","values","values_mut","Error","LAST_RUST_ERROR","check_ptr","check_status","code","message","load","load_block","load_block_buffer","load_buffer","load_labels","load_labels_buffer","save","save_block","save_block_buffer","save_buffer","save_labels","save_labels_buffer"],"q":[[0,"metatensor"],[384,"metatensor::errors"],[390,"metatensor::io"],[402,"metatensor::labels"],[403,"core::marker"],[404,"core::convert"],[405,"metatensor::block::owned"],[406,"metatensor_sys"],[407,"core::result"],[408,"metatensor::data::array"],[409,"core::any"],[410,"metatensor::data::array_ref"],[411,"ndarray::aliases"],[412,"metatensor_sys::c_api"],[413,"metatensor::block::block_mut"],[414,"metatensor::block::block_ref"],[415,"metatensor::tensor"],[416,"alloc::vec"],[417,"core::cmp"],[418,"alloc::boxed"],[419,"metatensor::block"],[420,"core::fmt"],[421,"core::option"],[422,"core::hash"],[423,"std::path"],[424,"core::ops::range"],[425,"alloc::string"],[426,"core::ptr::non_null"],[427,"metatensor::io::tensor"],[428,"metatensor::io::block"],[429,"metatensor::io::labels"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,9,13,15,16,17,13,16,17,15,16,16,15,16,16,21,9,9,23,23,23,23,23,23,23,11,24,45,46,34,23,49,50,15,16,17,7,27,28,2,22,32,21,33,9,11,24,45,46,34,23,49,50,15,16,17,7,27,28,2,22,32,21,33,9,0,11,24,15,17,7,27,28,2,22,11,24,15,17,7,27,28,2,22,7,11,22,21,9,32,33,23,24,13,17,24,13,17,13,17,22,21,34,24,23,9,24,24,7,7,0,2,11,11,24,34,23,15,16,17,7,7,27,28,2,22,32,21,33,9,11,11,24,45,46,34,23,49,50,15,16,17,7,7,7,7,7,27,28,2,22,32,21,33,9,24,23,15,22,22,21,22,21,7,7,24,24,11,24,45,46,34,23,49,50,15,16,17,7,27,28,2,22,32,21,33,9,24,45,46,23,23,49,50,27,28,23,0,24,7,24,23,24,23,23,23,23,45,46,49,50,27,28,24,23,9,24,23,9,11,13,17,24,24,34,23,16,17,7,2,9,45,46,49,50,27,28,7,24,22,21,9,32,33,2,13,17,22,21,9,32,33,24,23,22,21,9,24,23,22,21,9,24,13,17,24,24,2,45,46,49,50,27,28,13,17,15,16,16,15,16,16,11,24,15,17,7,27,28,2,22,11,7,23,22,11,24,45,46,34,23,49,50,15,16,17,7,27,28,2,22,32,21,33,9,11,24,45,46,34,23,49,50,15,16,17,7,27,28,2,22,32,21,33,9,11,24,45,46,34,23,49,50,15,16,17,7,27,28,2,22,32,21,33,9,24,7,22,21,9,32,33,21,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0],"f":"`````````````````````{{{f{bd}}{f{{h{c}}}}}j{l{A`{n}}}}{{{f{bAb}}{f{Ad}}Ab}{{Ah{jAf}}}}{{{f{Aj}}}{{f{Al}}}}{{{f{An}}}{{f{Al}}}}{{{f{B`}}}{{f{Al}}}}{{{f{Bb}}}{{f{Al}}}}{{{f{bAj}}}{{f{bAl}}}}{{{f{bB`}}}{{f{bAl}}}}{{{f{bBb}}}{{f{bAl}}}}{{{f{An}}}{{f{{Bf{Bd}}}}}}{{{f{B`}}}{{f{{Bf{Bd}}}}}}{{{f{bB`}}}{{f{b{Bf{Bd}}}}}}{{{f{An}}}{{f{Bh}}}}{{{f{B`}}}{{f{Bh}}}}{{{f{bB`}}}{{f{bBh}}}}{{{f{Bj}}}Bl}{{{f{Ab}}}Bl}{{{f{bAb}}}Bj}{{{f{Bn}}{f{C`}}}{{Ah{BlAf}}}}{{{f{Bn}}Cb}Bl}{{{f{Bn}}{f{C`}}}{{Ah{CbAf}}}}{{{f{bBn}}Cb}Bj}{{{f{Bn}}}{{Cd{Bl}}}}{{{f{Bn}}{f{C`}}}{{Ah{{Cd{Cb}}Af}}}}{{{f{bBn}}}{{Cd{Bj}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000000000000{{{f{bc}}}{{f{be}}}{}{}}0000000000000000000`{{{f{Af}}}Af}{{{f{C`}}}C`}{{{f{An}}}An}{{{f{Bb}}}Bb}{{{f{n}}}n}{{{f{Cf}}}Cf}{{{f{Ch}}}Ch}{{{f{d}}}d}{{{f{Bl}}}Bl}{{{f{c}}{f{be}}}j{}{}}00000000{{{f{n}}{f{n}}}Cj}`{{{f{Bl}}}{{Cd{C`}}}}{{{f{Bj}}}{{Cd{C`}}}}{{{f{Ab}}}{{Cd{C`}}}}``{{{f{Bn}}{f{{h{{f{Ad}}}}}}}{{Ah{BnAf}}}}{{{f{C`}}{f{{h{n}}}}}Cl}{{{f{Aj}}}{{Cn{Aj}}}}{{{f{Bb}}}{{Cn{Aj}}}}{{{f{C`}}}Cb}{{{f{Aj}}{f{{h{Cb}}}}}{{Cn{Aj}}}}{{{f{Bb}}{f{{h{Cb}}}}}{{Cn{Aj}}}}{{{f{bAj}}}{{f{b{h{Bd}}}}}}{{{f{bBb}}}{{f{b{h{Bd}}}}}}{{{f{Bl}}}D`}{{{f{bBj}}}Db}{{{f{{Dd{c}}}}}{{f{e}}}{}{}}{{{f{bC`}}}j}{{{f{bBn}}}j}{{{f{bAb}}}j}{{{Cd{{f{Ad}}}}}C`}{{{f{C`}}{f{C`}}}Cl}{{{f{n}}{f{n}}}Cl}{{{f{n}}{f{Df}}}Cl}`{dC`}{{{f{Af}}{f{bDh}}}{{Ah{jDj}}}}0{{{f{C`}}{f{bDh}}}Dl}{{{f{{Dd{c}}}}{f{bDh}}}DlDn}{{{f{Bn}}{f{bDh}}}Dl}{{{f{An}}{f{bDh}}}Dl}{{{f{B`}}{f{bDh}}}Dl}{{{f{Bb}}{f{bDh}}}Dl}{{{f{n}}{f{bDh}}}Dl}0{{{f{Cf}}{f{bDh}}}Dl}{{{f{Ch}}{f{bDh}}}Dl}{{{f{d}}{f{bDh}}}Dl}{{{f{Bl}}{f{bDh}}}Dl}{{{f{D`}}{f{bDh}}}Dl}{{{f{Bj}}{f{bDh}}}Dl}{{{f{Db}}{f{bDh}}}Dl}{{{f{Ab}}{f{bDh}}}Dl}{cc{}}{{{Cn{Al}}}Af}1111111111{Cbn}{Dfn}{E`n}4{Ebn}55555555{EdC`}{EfBn}{BhAn}{{{f{Bl}}{f{Ad}}}{{Eh{Bl}}}}{{{f{Bl}}}{{Cd{{f{Ad}}}}}}{{{f{bBj}}{f{Ad}}}{{Eh{Bj}}}}{{{f{Bl}}}Ej}{{{f{bBj}}}El}{{{f{n}}{f{bc}}}jEn}{nDf}{{{f{C`}}Cb}{{f{{h{n}}}}}}{{{f{C`}}{f{C`}}{Eh{{f{b{h{F`}}}}}}{Eh{{f{b{h{F`}}}}}}}{{Ah{C`Af}}}}{ce{}{}}0000000000000000000{{{f{C`}}}c{}}11{{{f{bBn}}}c{}}{{{f{Bn}}}c{}}3333{BnEf}`{{{f{C`}}}Cl}{nEb}{{{f{C`}}}Cf}{{{f{Bn}}}Fb}{{{f{C`}}}Ch}{{{f{bBn}}}Fd}{{{f{Bn}}}{{f{C`}}}}{{{f{Bn}}{f{C`}}Cl}{{Ah{BnAf}}}}0{{{f{Ej}}}Cb}{{{f{El}}}Cb}{{{f{Fb}}}Cb}{{{f{Fd}}}Cb}{{{f{Cf}}}Cb}{{{f{Ch}}}Cb}{c{{Ah{C`Af}}}{{Fh{Ff}}}}{c{{Ah{BnAf}}}{{Fh{Ff}}}}{c{{Ah{AbAf}}}{{Fh{Ff}}}}{{{f{{h{Fj}}}}}{{Ah{C`Af}}}}{{{f{{h{Fj}}}}}{{Ah{BnAf}}}}{{{f{{h{Fj}}}}}{{Ah{AbAf}}}}`{{{f{bAj}}{f{Aj}}{f{{h{Fl}}}}{Fn{Cb}}}j}{{{f{bBb}}{f{Aj}}{f{{h{Fl}}}}{Fn{Cb}}}j}{{{f{C`}}}{{Cd{{f{Ad}}}}}}{{{G`{{f{Ad}}}}{f{{h{{G`{c}}}}}}}C`{l{A`{n}}}}{{{Gf{Gb}{{Gd{c}}}}Gb}{{Dd{c}}}{}}{{C`{Cd{Ab}}}{{Ah{BnAf}}}}{BhB`}{{{Cd{Cb}}}Bb}{Dfn}{{{Cd{{f{Ad}}}}}d}{{c{f{C`}}{f{{h{C`}}}}{f{C`}}}{{Ah{AbAf}}}Aj}{{{f{bEj}}}{{Eh{c}}}{}}{{{f{bEl}}}{{Eh{c}}}{}}{{{f{bFb}}}{{Eh{c}}}{}}{{{f{bFd}}}{{Eh{c}}}{}}{{{f{bCf}}}{{Eh{c}}}{}}{{{f{bCh}}}{{Eh{c}}}{}}{{{f{n}}{f{n}}}{{Eh{Cj}}}}{{{f{C`}}{f{{h{n}}}}}{{Eh{Cb}}}}{{{f{Bl}}}C`}{{{f{Bj}}}C`}{{{f{Ab}}}C`}``{{{f{bd}}Cb}j}{{{f{bAj}}{f{{h{Cb}}}}}j}{{{f{bBb}}{f{{h{Cb}}}}}j}543``{{{f{C`}}c}{{Ah{jAf}}}{{Fh{Ff}}}}{{{f{Bn}}c}{{Ah{jAf}}}{{Fh{Ff}}}}{{{f{Bl}}c}{{Ah{jAf}}}{{Fh{Ff}}}}{{{f{Bj}}c}{{Ah{jAf}}}{{Fh{Ff}}}}{{{f{Ab}}c}{{Ah{jAf}}}{{Fh{Ff}}}}{{{f{C`}}{f{b{Cd{Fj}}}}}{{Ah{jAf}}}}{{{f{Bn}}{f{b{Cd{Fj}}}}}{{Ah{jAf}}}}{{{f{Bl}}{f{b{Cd{Fj}}}}}{{Ah{jAf}}}}{{{f{Bj}}{f{b{Cd{Fj}}}}}{{Ah{jAf}}}}{{{f{Ab}}{f{b{Cd{Fj}}}}}{{Ah{jAf}}}}{{{f{C`}}{f{C`}}}{{Ah{{Cd{F`}}Af}}}}{{{f{Aj}}}{{f{{h{Cb}}}}}}{{{f{Bb}}}{{f{{h{Cb}}}}}}{{}C`}{{{f{C`}}}Cb}{{{f{d}}}Cb}{{{f{Ej}}}{{Gh{Cb{Eh{Cb}}}}}}{{{f{El}}}{{Gh{Cb{Eh{Cb}}}}}}{{{f{Fb}}}{{Gh{Cb{Eh{Cb}}}}}}{{{f{Fd}}}{{Gh{Cb{Eh{Cb}}}}}}{{{f{Cf}}}{{Gh{Cb{Eh{Cb}}}}}}{{{f{Ch}}}{{Gh{Cb{Eh{Cb}}}}}}{{{f{bAj}}CbCb}j}{{{f{bBb}}CbCb}j}{An{{f{Al}}}}{{{f{B`}}}{{f{Al}}}}{B`{{f{bAl}}}}{An{{f{{Bf{Bd}}}}}}{{{f{B`}}}{{f{{Bf{Bd}}}}}}{B`{{f{b{Bf{Bd}}}}}}{{{f{c}}}e{}{}}00000000{{{f{c}}}Gj{}}0{{{f{Bn}}}{{Ah{BnAf}}}}{{{f{Bl}}}{{Ah{AbAf}}}}{c{{Ah{e}}}{}{}}000000000000000000000000000000000000000{{{f{c}}}Gl{}}0000000000000000000{{{f{C`}}{f{C`}}{Eh{{f{b{h{F`}}}}}}{Eh{{f{b{h{F`}}}}}}}{{Ah{C`Af}}}}{nCb}{{{f{Bl}}}An}{{{f{Bj}}}An}{{{f{Ab}}}An}``{{{f{bBj}}}B`}``{{}{{Ah{{Gn{c}}Af}}}{}}{H`{{Ah{jAf}}}}``{c{{Ah{BnAf}}}{{Fh{Ff}}}}{c{{Ah{AbAf}}}{{Fh{Ff}}}}{{{f{{h{Fj}}}}}{{Ah{AbAf}}}}{{{f{{h{Fj}}}}}{{Ah{BnAf}}}}{c{{Ah{C`Af}}}{{Fh{Ff}}}}{{{f{{h{Fj}}}}}{{Ah{C`Af}}}}{{c{f{Bn}}}{{Ah{jAf}}}{{Fh{Ff}}}}{{cBl}{{Ah{jAf}}}{{Fh{Ff}}}}{{Bl{f{b{Cd{Fj}}}}}{{Ah{jAf}}}}{{{f{Bn}}{f{b{Cd{Fj}}}}}{{Ah{jAf}}}}{{c{f{C`}}}{{Ah{jAf}}}{{Fh{Ff}}}}{{{f{C`}}{f{b{Cd{Fj}}}}}{{Ah{jAf}}}}","D":"AHd","p":[[0,"mut"],[5,"LabelsBuilder",0,402],[1,"reference"],[1,"slice"],[1,"unit"],[10,"Copy",403],[5,"LabelValue",0,402],[10,"Into",404],[5,"TensorBlock",0,405],[1,"str"],[5,"Error",0,406],[6,"Result",407],[10,"Array",0,408],[10,"Any",409],[5,"ArrayRef",0,410],[5,"ArrayRefMut",0,410],[5,"EmptyArray",0,408],[1,"f64"],[8,"ArrayD",411],[5,"mts_array_t",412],[5,"TensorBlockRefMut",0,413],[5,"TensorBlockRef",0,414],[5,"TensorMap",0,415],[5,"Labels",0,402],[1,"usize"],[5,"Vec",416],[5,"LabelsIter",0,402],[5,"LabelsFixedSizeIter",0,402],[6,"Ordering",417],[1,"bool"],[5,"Box",418],[5,"TensorBlockData",0,414],[5,"TensorBlockDataMut",0,413],[5,"LazyMetadata",0,419],[1,"i32"],[5,"Formatter",420],[5,"Error",420],[8,"Result",420],[10,"Debug",420],[1,"u32"],[1,"isize"],[5,"mts_labels_t",412],[5,"mts_tensormap_t",412],[6,"Option",421],[5,"GradientsIter",0,414],[5,"GradientsMutIter",0,413],[10,"Hasher",422],[1,"i64"],[5,"TensorMapIter",0,415],[5,"TensorMapIterMut",0,415],[5,"Path",423],[10,"AsRef",404],[1,"u8"],[5,"mts_sample_mapping_t",412],[5,"Range",424],[1,"array"],[5,"mts_block_t",412],[17,"Output"],[1,"fn"],[1,"tuple"],[5,"String",425],[5,"TypeId",409],[5,"NonNull",426],[8,"mts_status_t",412]],"r":[[0,408],[1,410],[2,410],[3,408],[4,406],[5,414],[6,413],[7,402],[8,402],[9,402],[10,402],[11,402],[12,419],[13,405],[14,414],[15,413],[16,414],[17,413],[18,415],[19,415],[20,415],[384,406],[390,427],[391,428],[392,428],[393,427],[394,429],[395,429],[396,427],[397,428],[398,428],[399,427],[400,429],[401,429]],"b":[[129,"impl-PartialEq-for-LabelValue"],[130,"impl-PartialEq%3Ci32%3E-for-LabelValue"],[133,"impl-Display-for-Error"],[134,"impl-Debug-for-Error"],[141,"impl-Debug-for-LabelValue"],[142,"impl-Display-for-LabelValue"],[163,"impl-From%3Cusize%3E-for-LabelValue"],[164,"impl-From%3Ci32%3E-for-LabelValue"],[165,"impl-From%3Cu32%3E-for-LabelValue"],[167,"impl-From%3Cisize%3E-for-LabelValue"],[211,"impl-IntoIterator-for-%26mut+TensorMap"],[212,"impl-IntoIterator-for-%26TensorMap"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAANAAHAAbAAAAHgAAAC8AOwBvAAEAdAAAAHcAAAB5AAAAfAADAIEAAwCGABEAmQAAAKQAAgCoAAAAuQAAALsAAADRAAgA5QAFAPMAAAD9AAYACAEBAAwBAAAQAQEAHgEAACIBBQApAQAAMAEKAD0BOwB+AQEA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
