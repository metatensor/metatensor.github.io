:orphan:

.. _learn-tutorials:

Tutorials
=========



.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This tutorial shows how to define :pyDataset and :pyDataLoader objects compatible with PyTorch while containing metatensor data (i.e. data stored in :pymetatensor.torch.TensorMap) in addition to more usual types of data.">

.. only:: html

  .. image:: /examples/learn/images/thumb/sphx_glr_1-dataset-dataloader_thumb.png
    :alt:

  :ref:`sphx_glr_examples_learn_1-dataset-dataloader.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Datasets and data loaders</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="Using IndexedDataset">

.. only:: html

  .. image:: /examples/learn/images/thumb/sphx_glr_2-indexed-dataset_thumb.png
    :alt:

  :ref:`sphx_glr_examples_learn_2-indexed-dataset.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Using IndexedDataset</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrates the use of convenience modules in metatensor-learn to build simple multi-layer perceptrons.">

.. only:: html

  .. image:: /examples/learn/images/thumb/sphx_glr_3-nn-modules-basic_thumb.png
    :alt:

  :ref:`sphx_glr_examples_learn_3-nn-modules-basic.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Convenience nn modules</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This example demonstrates the use of convenience modules in metatensor-learn to build simple equivariance-preserving multi-layer perceptrons.">

.. only:: html

  .. image:: /examples/learn/images/thumb/sphx_glr_4-nn-modules-equivariant_thumb.png
    :alt:

  :ref:`sphx_glr_examples_learn_4-nn-modules-equivariant.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Equivariance-preserving nn modules</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="This tutorial demonstrates how to build custom architectures compatible with TensorMap objects by combining native torch.nn modules with metatensor-learn&#x27;s ModuleMap.">

.. only:: html

  .. image:: /examples/learn/images/thumb/sphx_glr_5-nn-using-modulemap_thumb.png
    :alt:

  :ref:`sphx_glr_examples_learn_5-nn-using-modulemap.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Custom architectures with ModuleMap</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:

   /examples/learn/1-dataset-dataloader
   /examples/learn/2-indexed-dataset
   /examples/learn/3-nn-modules-basic
   /examples/learn/4-nn-modules-equivariant
   /examples/learn/5-nn-using-modulemap


.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-gallery

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download all examples in Python source code: learn_python.zip </examples/learn/learn_python.zip>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download all examples in Jupyter notebooks: learn_jupyter.zip </examples/learn/learn_jupyter.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
